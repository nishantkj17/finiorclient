import * as ɵngcc0 from '@angular/core';
export interface ConfirmationPopoverOptionsInterface {
    /**
     * The popover title
     */
    popoverTitle?: string;
    /**
     * The popover message
     */
    popoverMessage?: string;
    /**
     * The popover confirmation button text
     */
    confirmText?: string;
    /**
     * The popover cancel button text
     */
    cancelText?: string;
    /**
     * The popover confirm button type e.g. `success`, `danger` etc
     */
    confirmButtonType?: string;
    /**
     * The popover cancel button type  e.g. `success`, `danger` etc
     */
    cancelButtonType?: string;
    /**
     * The popover placement. Can be `top`, `bottom`, `left`, `right`
     */
    placement?: string;
    /**
     * Which button to cancel. Can be either `confirm` or `cancel`
     */
    focusButton?: string;
    /**
     * Whether to hide the confirmation button
     */
    hideConfirmButton?: boolean;
    /**
     * Whether to hide the cancel button
     */
    hideCancelButton?: boolean;
    /**
     * A custom CSS class to be added to the popover
     */
    popoverClass?: string;
    /**
     * Whether to append the popover to the document body
     */
    appendToBody?: boolean;
    /**
     * Swap the order of the confirm and cancel buttons
     */
    reverseButtonOrder?: boolean;
    /**
     * Whether or not the popover should stay open when clicking outside it
     */
    closeOnOutsideClick?: boolean;
}
export declare class ConfirmationPopoverOptions implements ConfirmationPopoverOptionsInterface {
    popoverTitle: string;
    popoverMessage: string;
    confirmText: string;
    cancelText: string;
    confirmButtonType: string;
    cancelButtonType: string;
    placement: string;
    focusButton: string;
    hideConfirmButton: boolean;
    hideCancelButton: boolean;
    popoverClass: string;
    appendToBody: boolean;
    reverseButtonOrder: boolean;
    closeOnOutsideClick: boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ConfirmationPopoverOptions, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<ConfirmationPopoverOptions>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybWF0aW9uLXBvcG92ZXItb3B0aW9ucy5wcm92aWRlci5kLnRzIiwic291cmNlcyI6WyJjb25maXJtYXRpb24tcG9wb3Zlci1vcHRpb25zLnByb3ZpZGVyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgQ29uZmlybWF0aW9uUG9wb3Zlck9wdGlvbnNJbnRlcmZhY2Uge1xuICAgIC8qKlxuICAgICAqIFRoZSBwb3BvdmVyIHRpdGxlXG4gICAgICovXG4gICAgcG9wb3ZlclRpdGxlPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBwb3BvdmVyIG1lc3NhZ2VcbiAgICAgKi9cbiAgICBwb3BvdmVyTWVzc2FnZT86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgcG9wb3ZlciBjb25maXJtYXRpb24gYnV0dG9uIHRleHRcbiAgICAgKi9cbiAgICBjb25maXJtVGV4dD86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgcG9wb3ZlciBjYW5jZWwgYnV0dG9uIHRleHRcbiAgICAgKi9cbiAgICBjYW5jZWxUZXh0Pzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBwb3BvdmVyIGNvbmZpcm0gYnV0dG9uIHR5cGUgZS5nLiBgc3VjY2Vzc2AsIGBkYW5nZXJgIGV0Y1xuICAgICAqL1xuICAgIGNvbmZpcm1CdXR0b25UeXBlPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFRoZSBwb3BvdmVyIGNhbmNlbCBidXR0b24gdHlwZSAgZS5nLiBgc3VjY2Vzc2AsIGBkYW5nZXJgIGV0Y1xuICAgICAqL1xuICAgIGNhbmNlbEJ1dHRvblR5cGU/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIHBvcG92ZXIgcGxhY2VtZW50LiBDYW4gYmUgYHRvcGAsIGBib3R0b21gLCBgbGVmdGAsIGByaWdodGBcbiAgICAgKi9cbiAgICBwbGFjZW1lbnQ/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogV2hpY2ggYnV0dG9uIHRvIGNhbmNlbC4gQ2FuIGJlIGVpdGhlciBgY29uZmlybWAgb3IgYGNhbmNlbGBcbiAgICAgKi9cbiAgICBmb2N1c0J1dHRvbj86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRvIGhpZGUgdGhlIGNvbmZpcm1hdGlvbiBidXR0b25cbiAgICAgKi9cbiAgICBoaWRlQ29uZmlybUJ1dHRvbj86IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogV2hldGhlciB0byBoaWRlIHRoZSBjYW5jZWwgYnV0dG9uXG4gICAgICovXG4gICAgaGlkZUNhbmNlbEJ1dHRvbj86IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQSBjdXN0b20gQ1NTIGNsYXNzIHRvIGJlIGFkZGVkIHRvIHRoZSBwb3BvdmVyXG4gICAgICovXG4gICAgcG9wb3ZlckNsYXNzPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgdG8gYXBwZW5kIHRoZSBwb3BvdmVyIHRvIHRoZSBkb2N1bWVudCBib2R5XG4gICAgICovXG4gICAgYXBwZW5kVG9Cb2R5PzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBTd2FwIHRoZSBvcmRlciBvZiB0aGUgY29uZmlybSBhbmQgY2FuY2VsIGJ1dHRvbnNcbiAgICAgKi9cbiAgICByZXZlcnNlQnV0dG9uT3JkZXI/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgb3Igbm90IHRoZSBwb3BvdmVyIHNob3VsZCBzdGF5IG9wZW4gd2hlbiBjbGlja2luZyBvdXRzaWRlIGl0XG4gICAgICovXG4gICAgY2xvc2VPbk91dHNpZGVDbGljaz86IGJvb2xlYW47XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb25maXJtYXRpb25Qb3BvdmVyT3B0aW9ucyBpbXBsZW1lbnRzIENvbmZpcm1hdGlvblBvcG92ZXJPcHRpb25zSW50ZXJmYWNlIHtcbiAgICBwb3BvdmVyVGl0bGU6IHN0cmluZztcbiAgICBwb3BvdmVyTWVzc2FnZTogc3RyaW5nO1xuICAgIGNvbmZpcm1UZXh0OiBzdHJpbmc7XG4gICAgY2FuY2VsVGV4dDogc3RyaW5nO1xuICAgIGNvbmZpcm1CdXR0b25UeXBlOiBzdHJpbmc7XG4gICAgY2FuY2VsQnV0dG9uVHlwZTogc3RyaW5nO1xuICAgIHBsYWNlbWVudDogc3RyaW5nO1xuICAgIGZvY3VzQnV0dG9uOiBzdHJpbmc7XG4gICAgaGlkZUNvbmZpcm1CdXR0b246IGJvb2xlYW47XG4gICAgaGlkZUNhbmNlbEJ1dHRvbjogYm9vbGVhbjtcbiAgICBwb3BvdmVyQ2xhc3M6IHN0cmluZztcbiAgICBhcHBlbmRUb0JvZHk6IGJvb2xlYW47XG4gICAgcmV2ZXJzZUJ1dHRvbk9yZGVyOiBib29sZWFuO1xuICAgIGNsb3NlT25PdXRzaWRlQ2xpY2s6IGJvb2xlYW47XG59XG4iXX0=