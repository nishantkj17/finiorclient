import { Observable } from 'rxjs';
import { LoginProvider } from './entities/login-provider';
import { SocialUser } from './entities/social-user';
import * as ɵngcc0 from '@angular/core';
export interface SocialAuthServiceConfig {
    autoLogin?: boolean;
    providers: {
        id: string;
        provider: LoginProvider;
    }[];
    onError?: (error: any) => any;
}
/** @dynamic */
export declare class SocialAuthService {
    private static readonly ERR_LOGIN_PROVIDER_NOT_FOUND;
    private static readonly ERR_NOT_LOGGED_IN;
    private static readonly ERR_NOT_INITIALIZED;
    private static readonly ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN;
    private providers;
    private autoLogin;
    private _user;
    private _authState;
    private initialized;
    private _initState;
    get authState(): Observable<SocialUser>;
    get initState(): Observable<boolean>;
    constructor(config: SocialAuthServiceConfig | Promise<SocialAuthServiceConfig>);
    private initialize;
    refreshAuthToken(providerId: string): Promise<void>;
    signIn(providerId: string, signInOptions?: any): Promise<SocialUser>;
    signOut(revoke?: boolean): Promise<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SocialAuthService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<SocialAuthService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29jaWFsYXV0aC5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbInNvY2lhbGF1dGguc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBMb2dpblByb3ZpZGVyIH0gZnJvbSAnLi9lbnRpdGllcy9sb2dpbi1wcm92aWRlcic7XHJcbmltcG9ydCB7IFNvY2lhbFVzZXIgfSBmcm9tICcuL2VudGl0aWVzL3NvY2lhbC11c2VyJztcclxuZXhwb3J0IGludGVyZmFjZSBTb2NpYWxBdXRoU2VydmljZUNvbmZpZyB7XHJcbiAgICBhdXRvTG9naW4/OiBib29sZWFuO1xyXG4gICAgcHJvdmlkZXJzOiB7XHJcbiAgICAgICAgaWQ6IHN0cmluZztcclxuICAgICAgICBwcm92aWRlcjogTG9naW5Qcm92aWRlcjtcclxuICAgIH1bXTtcclxuICAgIG9uRXJyb3I/OiAoZXJyb3I6IGFueSkgPT4gYW55O1xyXG59XHJcbi8qKiBAZHluYW1pYyAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTb2NpYWxBdXRoU2VydmljZSB7XHJcbiAgICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBFUlJfTE9HSU5fUFJPVklERVJfTk9UX0ZPVU5EO1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgRVJSX05PVF9MT0dHRURfSU47XHJcbiAgICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBFUlJfTk9UX0lOSVRJQUxJWkVEO1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgRVJSX05PVF9TVVBQT1JURURfRk9SX1JFRlJFU0hfVE9LRU47XHJcbiAgICBwcml2YXRlIHByb3ZpZGVycztcclxuICAgIHByaXZhdGUgYXV0b0xvZ2luO1xyXG4gICAgcHJpdmF0ZSBfdXNlcjtcclxuICAgIHByaXZhdGUgX2F1dGhTdGF0ZTtcclxuICAgIHByaXZhdGUgaW5pdGlhbGl6ZWQ7XHJcbiAgICBwcml2YXRlIF9pbml0U3RhdGU7XHJcbiAgICBnZXQgYXV0aFN0YXRlKCk6IE9ic2VydmFibGU8U29jaWFsVXNlcj47XHJcbiAgICBnZXQgaW5pdFN0YXRlKCk6IE9ic2VydmFibGU8Ym9vbGVhbj47XHJcbiAgICBjb25zdHJ1Y3Rvcihjb25maWc6IFNvY2lhbEF1dGhTZXJ2aWNlQ29uZmlnIHwgUHJvbWlzZTxTb2NpYWxBdXRoU2VydmljZUNvbmZpZz4pO1xyXG4gICAgcHJpdmF0ZSBpbml0aWFsaXplO1xyXG4gICAgcmVmcmVzaEF1dGhUb2tlbihwcm92aWRlcklkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+O1xyXG4gICAgc2lnbkluKHByb3ZpZGVySWQ6IHN0cmluZywgc2lnbkluT3B0aW9ucz86IGFueSk6IFByb21pc2U8U29jaWFsVXNlcj47XHJcbiAgICBzaWduT3V0KHJldm9rZT86IGJvb2xlYW4pOiBQcm9taXNlPGFueT47XHJcbn1cclxuIl19